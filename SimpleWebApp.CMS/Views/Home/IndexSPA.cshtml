@using System.Web.Optimization
@{
    ViewBag.Title = "Main Page";
}

<h2>@ViewBag.Title</h2>

<div class="row">
    @Html.ActionLink("New Article", "Edit", "Home", null, new { @class = "btn btn-primary" })
</div>

<table class="table table-bordered table-hover">
    <thead>
        <tr data-bind="foreach: dataSource.columns">
            <th data-bind="text: header"></th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <td>
                <select data-bind="options: dataSource.itemsOnPageList, value: dataSource.itemsOnPageSelected"></select>
            </td>
            <td data-bind="foreach: dataSource.pages">
                <button class="btn btn-info" data-bind="text: $data, click: (pageNumber) => { dataSource.openPage(pageNumber) }"></button>
            </td>
            <td>
                <button class="btn btn-primary" data-bind="click: actions.showPrevPage"><<</button>
                <button class="btn btn-info" data-bind="text: dataSource.currentPage"></button>
                <button class="btn btn-primary" data-bind="click: actions.showNextPage">>></button>
            </td>
        </tr>
    </tfoot>
    <tbody data-bind="foreach: { data: dataSource.items, as: 'item' }">
        <tr>
            <td data-bind="text: item[dataSource.columns()[0].property]"></td>
            <td data-bind="text: item[dataSource.columns()[1].property]"></td>
            <td>
                <button class="btn btn-primary">Edit</button>
                <button class="btn btn-danger">Remove</button>
            </td>
        </tr>
    </tbody>
</table>

@section scripts
{
    @Scripts.Render("~/bundles/requirejs")
    @Scripts.Render("~/bundles/grid")

    <script>
        "use strict";

        let dataSource = new DataSource({
            columns: [
                {
                    header: "Title",
                    property: "title"
                }, {
                    header: "Url",
                    property: "url"
                }, {
                    header: "Actions"
                }
            ],
            //itemsOnPageList: [3, 5, 10, 12, 20],
            callback: (url) => $.getJSON(url)
        });

        let gridViewModel = new GridViewModel(dataSource);

        ko.options.useOnlyNativeEvents = true;
        ko.applyBindings(gridViewModel);       
    </script>
}
