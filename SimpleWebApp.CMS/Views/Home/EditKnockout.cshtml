@model SimpleWebApp.BusinessLogic.DTO.ArticleEditDto

@{
    ViewBag.Title = Model?.Id > 0 ? "Edit Article" : "New Article";
}

<h2>@ViewBag.Title</h2>

<form class="form-horizontal" action="" method="post" data-bind="submit: doSubmit" role="form">
    <input type="hidden" name="Id" id="Id" data-bind="input : Id" />

    <div class="form-group">
        <label class="col-md-2 control-label" for="Title">Title</label>
        <div class="col-md-10">
            <input class="form-control" type="text" name="Title" id="Title" data-bind="textInput : article.Title" />
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label" for="Url">Url</label>
        <div class="col-md-10">
            <input class="form-control" type="text" name="Url" id="Url" data-bind="textInput : article.Url" />
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-2 control-label" for="Description">Description</label>
        <div class="col-md-10">
            <textarea class="form-control" name="Description" id="Description" data-bind="textInput : article.Description" rows="10"></textarea>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-danger" data-bind="click: loadArticle">Reload</button>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to Articles", "Index", "Home", null, null)
</div>
@section scripts
{
    <script>
        (function () {
            function ArticleEditViewModel() {
                var self = this;

                self.article = {
                    Id: ko.observable(),
                    Title: ko.observable(),
                    Url: ko.observable(),
                    Description: ko.observable()
                };

                self.setArticle = function (model) {
                    if (model == null) {
                        throw new Error("model is null!");
                    }

                    self.article.Id(model.Id);
                    self.article.Title(model.Title);
                    self.article.Url(model.Url);
                    self.article.Description(model.Description);
                };

                self.loadArticle = function () {
                    $.ajax({
                        url: "/api/article/" + self.article.Id(),
                        type: "GET",
                        contentType: "application/json",
                        dataType: "json"
                    }).done(self.success).fail(self.error);
                };

                self.doSubmit = function () {
                    $.ajax({
                        url: "/api/article",
                        data: ko.toJSON(self.article),
                        type: "POST",
                        contentType: "application/json"
                    }).done(self.success).fail(self.error);
                };

                self.success = function (data) {
                    if (data == null) {
                        throw new Error("data is null!");
                    }

                    self.setArticle(data);

                    console.info("Success");
                };

                self.error = function (error) {
                    console.error(error.message);
                };
            }

            var viewModel = new ArticleEditViewModel();
            viewModel.setArticle(@Html.Raw(Json.Encode(Model)));

            ko.options.useOnlyNativeEvents = true;
            ko.applyBindings(viewModel);

        })();
    </script>
}